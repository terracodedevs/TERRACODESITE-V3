/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as WebsiteSolutionsRouteImport } from './routes/website-solutions'
import { Route as TestRouteImport } from './routes/test'
import { Route as ServiceRouteImport } from './routes/service'
import { Route as PricingRouteImport } from './routes/pricing'
import { Route as MobileAppsRouteImport } from './routes/mobile-apps'
import { Route as HomeRouteImport } from './routes/home'
import { Route as DigitalportfolioRouteImport } from './routes/digitalportfolio'
import { Route as DGVycmFjb2RlCgRouteImport } from './routes/dGVycmFjb2RlCg'
import { Route as ContactRouteImport } from './routes/contact'
import { Route as CloudSolutionsRouteImport } from './routes/cloud-solutions'
import { Route as CareerRouteImport } from './routes/career'
import { Route as BusinessSoftwaresRouteImport } from './routes/business-softwares'
import { Route as ArticlesRouteImport } from './routes/articles'
import { Route as AiSolutionsRouteImport } from './routes/ai-solutions'
import { Route as AboutRouteImport } from './routes/about'
import { Route as IndexRouteImport } from './routes/index'

const WebsiteSolutionsRoute = WebsiteSolutionsRouteImport.update({
  id: '/website-solutions',
  path: '/website-solutions',
  getParentRoute: () => rootRouteImport,
} as any)
const TestRoute = TestRouteImport.update({
  id: '/test',
  path: '/test',
  getParentRoute: () => rootRouteImport,
} as any)
const ServiceRoute = ServiceRouteImport.update({
  id: '/service',
  path: '/service',
  getParentRoute: () => rootRouteImport,
} as any)
const PricingRoute = PricingRouteImport.update({
  id: '/pricing',
  path: '/pricing',
  getParentRoute: () => rootRouteImport,
} as any)
const MobileAppsRoute = MobileAppsRouteImport.update({
  id: '/mobile-apps',
  path: '/mobile-apps',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeRoute = HomeRouteImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRouteImport,
} as any)
const DigitalportfolioRoute = DigitalportfolioRouteImport.update({
  id: '/digitalportfolio',
  path: '/digitalportfolio',
  getParentRoute: () => rootRouteImport,
} as any)
const DGVycmFjb2RlCgRoute = DGVycmFjb2RlCgRouteImport.update({
  id: '/dGVycmFjb2RlCg',
  path: '/dGVycmFjb2RlCg',
  getParentRoute: () => rootRouteImport,
} as any)
const ContactRoute = ContactRouteImport.update({
  id: '/contact',
  path: '/contact',
  getParentRoute: () => rootRouteImport,
} as any)
const CloudSolutionsRoute = CloudSolutionsRouteImport.update({
  id: '/cloud-solutions',
  path: '/cloud-solutions',
  getParentRoute: () => rootRouteImport,
} as any)
const CareerRoute = CareerRouteImport.update({
  id: '/career',
  path: '/career',
  getParentRoute: () => rootRouteImport,
} as any)
const BusinessSoftwaresRoute = BusinessSoftwaresRouteImport.update({
  id: '/business-softwares',
  path: '/business-softwares',
  getParentRoute: () => rootRouteImport,
} as any)
const ArticlesRoute = ArticlesRouteImport.update({
  id: '/articles',
  path: '/articles',
  getParentRoute: () => rootRouteImport,
} as any)
const AiSolutionsRoute = AiSolutionsRouteImport.update({
  id: '/ai-solutions',
  path: '/ai-solutions',
  getParentRoute: () => rootRouteImport,
} as any)
const AboutRoute = AboutRouteImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ai-solutions': typeof AiSolutionsRoute
  '/articles': typeof ArticlesRoute
  '/business-softwares': typeof BusinessSoftwaresRoute
  '/career': typeof CareerRoute
  '/cloud-solutions': typeof CloudSolutionsRoute
  '/contact': typeof ContactRoute
  '/dGVycmFjb2RlCg': typeof DGVycmFjb2RlCgRoute
  '/digitalportfolio': typeof DigitalportfolioRoute
  '/home': typeof HomeRoute
  '/mobile-apps': typeof MobileAppsRoute
  '/pricing': typeof PricingRoute
  '/service': typeof ServiceRoute
  '/test': typeof TestRoute
  '/website-solutions': typeof WebsiteSolutionsRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ai-solutions': typeof AiSolutionsRoute
  '/articles': typeof ArticlesRoute
  '/business-softwares': typeof BusinessSoftwaresRoute
  '/career': typeof CareerRoute
  '/cloud-solutions': typeof CloudSolutionsRoute
  '/contact': typeof ContactRoute
  '/dGVycmFjb2RlCg': typeof DGVycmFjb2RlCgRoute
  '/digitalportfolio': typeof DigitalportfolioRoute
  '/home': typeof HomeRoute
  '/mobile-apps': typeof MobileAppsRoute
  '/pricing': typeof PricingRoute
  '/service': typeof ServiceRoute
  '/test': typeof TestRoute
  '/website-solutions': typeof WebsiteSolutionsRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/ai-solutions': typeof AiSolutionsRoute
  '/articles': typeof ArticlesRoute
  '/business-softwares': typeof BusinessSoftwaresRoute
  '/career': typeof CareerRoute
  '/cloud-solutions': typeof CloudSolutionsRoute
  '/contact': typeof ContactRoute
  '/dGVycmFjb2RlCg': typeof DGVycmFjb2RlCgRoute
  '/digitalportfolio': typeof DigitalportfolioRoute
  '/home': typeof HomeRoute
  '/mobile-apps': typeof MobileAppsRoute
  '/pricing': typeof PricingRoute
  '/service': typeof ServiceRoute
  '/test': typeof TestRoute
  '/website-solutions': typeof WebsiteSolutionsRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/ai-solutions'
    | '/articles'
    | '/business-softwares'
    | '/career'
    | '/cloud-solutions'
    | '/contact'
    | '/dGVycmFjb2RlCg'
    | '/digitalportfolio'
    | '/home'
    | '/mobile-apps'
    | '/pricing'
    | '/service'
    | '/test'
    | '/website-solutions'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/about'
    | '/ai-solutions'
    | '/articles'
    | '/business-softwares'
    | '/career'
    | '/cloud-solutions'
    | '/contact'
    | '/dGVycmFjb2RlCg'
    | '/digitalportfolio'
    | '/home'
    | '/mobile-apps'
    | '/pricing'
    | '/service'
    | '/test'
    | '/website-solutions'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/ai-solutions'
    | '/articles'
    | '/business-softwares'
    | '/career'
    | '/cloud-solutions'
    | '/contact'
    | '/dGVycmFjb2RlCg'
    | '/digitalportfolio'
    | '/home'
    | '/mobile-apps'
    | '/pricing'
    | '/service'
    | '/test'
    | '/website-solutions'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  AiSolutionsRoute: typeof AiSolutionsRoute
  ArticlesRoute: typeof ArticlesRoute
  BusinessSoftwaresRoute: typeof BusinessSoftwaresRoute
  CareerRoute: typeof CareerRoute
  CloudSolutionsRoute: typeof CloudSolutionsRoute
  ContactRoute: typeof ContactRoute
  DGVycmFjb2RlCgRoute: typeof DGVycmFjb2RlCgRoute
  DigitalportfolioRoute: typeof DigitalportfolioRoute
  HomeRoute: typeof HomeRoute
  MobileAppsRoute: typeof MobileAppsRoute
  PricingRoute: typeof PricingRoute
  ServiceRoute: typeof ServiceRoute
  TestRoute: typeof TestRoute
  WebsiteSolutionsRoute: typeof WebsiteSolutionsRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/website-solutions': {
      id: '/website-solutions'
      path: '/website-solutions'
      fullPath: '/website-solutions'
      preLoaderRoute: typeof WebsiteSolutionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/test': {
      id: '/test'
      path: '/test'
      fullPath: '/test'
      preLoaderRoute: typeof TestRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/service': {
      id: '/service'
      path: '/service'
      fullPath: '/service'
      preLoaderRoute: typeof ServiceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/pricing': {
      id: '/pricing'
      path: '/pricing'
      fullPath: '/pricing'
      preLoaderRoute: typeof PricingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/mobile-apps': {
      id: '/mobile-apps'
      path: '/mobile-apps'
      fullPath: '/mobile-apps'
      preLoaderRoute: typeof MobileAppsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/digitalportfolio': {
      id: '/digitalportfolio'
      path: '/digitalportfolio'
      fullPath: '/digitalportfolio'
      preLoaderRoute: typeof DigitalportfolioRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dGVycmFjb2RlCg': {
      id: '/dGVycmFjb2RlCg'
      path: '/dGVycmFjb2RlCg'
      fullPath: '/dGVycmFjb2RlCg'
      preLoaderRoute: typeof DGVycmFjb2RlCgRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/contact': {
      id: '/contact'
      path: '/contact'
      fullPath: '/contact'
      preLoaderRoute: typeof ContactRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/cloud-solutions': {
      id: '/cloud-solutions'
      path: '/cloud-solutions'
      fullPath: '/cloud-solutions'
      preLoaderRoute: typeof CloudSolutionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/career': {
      id: '/career'
      path: '/career'
      fullPath: '/career'
      preLoaderRoute: typeof CareerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/business-softwares': {
      id: '/business-softwares'
      path: '/business-softwares'
      fullPath: '/business-softwares'
      preLoaderRoute: typeof BusinessSoftwaresRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/articles': {
      id: '/articles'
      path: '/articles'
      fullPath: '/articles'
      preLoaderRoute: typeof ArticlesRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/ai-solutions': {
      id: '/ai-solutions'
      path: '/ai-solutions'
      fullPath: '/ai-solutions'
      preLoaderRoute: typeof AiSolutionsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  AiSolutionsRoute: AiSolutionsRoute,
  ArticlesRoute: ArticlesRoute,
  BusinessSoftwaresRoute: BusinessSoftwaresRoute,
  CareerRoute: CareerRoute,
  CloudSolutionsRoute: CloudSolutionsRoute,
  ContactRoute: ContactRoute,
  DGVycmFjb2RlCgRoute: DGVycmFjb2RlCgRoute,
  DigitalportfolioRoute: DigitalportfolioRoute,
  HomeRoute: HomeRoute,
  MobileAppsRoute: MobileAppsRoute,
  PricingRoute: PricingRoute,
  ServiceRoute: ServiceRoute,
  TestRoute: TestRoute,
  WebsiteSolutionsRoute: WebsiteSolutionsRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
